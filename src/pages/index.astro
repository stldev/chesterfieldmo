---
import Layout from "../layouts/Layout.astro";
import Card from "../components/Card.astro";
---

<Layout title="Chesterfield, Missouri">
	<main>
		<h1>
			<span class="text-gradient">Chesterfield votes!</span>
		</h1>
		<h3 style="text-align: center;">November 5th, 2024</h3>
		<p class="instructions">
			Here are our <code>opinions</code> on how you should vote on our local
			issues.<br /> Official link to get your specific ballot is:
			<a
				class="text-gradient"
				target="_blank"
				href="https://lookup-stlouiscovotes.hub.arcgis.com"
				>lookup-stlouiscovotes.hub.arcgis.com</a
			>.
			<br />
			The items below are for <code> Precinct LAF-029</code>.
		</p>
		<p class="instructions">
			<span id="pollPlaceName">checking...</span><br /><span
				id="pollPlaceCount">checking...</span
			><br />
			<button id="refreshPollPlaceCount">refresh</button>
		</p>
		<ul role="list" class="link-card-grid">
			<Card
				href="https://www.rayhartmannforcongress.com"
				title="U.S. REP - DISTRICT 2"
				body="RAY HARTMANN (DEM)"
			/>
			<Card
				href="https://www.perelesformissouri.com"
				title="STATE SENATE -DISTRICT 15"
				body="JOE PERELES (DEM)"
			/>
			<Card
				href="https://www.citizensforcotton.com"
				title="STATE REP - DISTRICT 101"
				body="JACQUELINE COTTON (DEM)"
			/>
		</ul>
	</main>
	<script>
		async function refreshPollPlaceCount() {
			document.getElementById("pollPlaceName")!.textContent =
				"checking...";
			document.getElementById("pollPlaceCount")!.textContent =
				"checking...";

			await new Promise((resolve) => setTimeout(resolve, 777));

			window
				.fetch(
					"https://services6.arcgis.com/wkbq75VVf2MvUvs7/arcgis/rest/services/lookup_view_polling_places_2024_11/FeatureServer/0/query?f=json&maxRecordCountFactor=1&resultOffset=0&resultRecordCount=100&where=abs_type%20IN%20(%27boe%27%2C%27sat%27)&orderByFields=OBJECTID&outFields=*&outSR=102100&spatialRel=esriSpatialRelIntersects",
				)
				.then(async (resp) => {
					const data: any = await resp.json();
					const match = data.features.filter((f: any) =>
						f.attributes.name.includes(
							"DANIEL BOONE BRANCH LIBRARY",
						),
					)[0];
					if (match) {
						document.getElementById("pollPlaceName")!.textContent =
							match.attributes.name;
						document.getElementById("pollPlaceCount")!.textContent =
							match.attributes.inline;
						// console.log(match.attributes.name);
						// console.log(match.attributes.inline);
					}
				});
		}

		const button = document.querySelector("#refreshPollPlaceCount");

		if (button)
			button.addEventListener("click", () => refreshPollPlaceCount());

		refreshPollPlaceCount();
	</script>
</Layout>

<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		color: white;
		font-size: 20px;
		line-height: 1.6;
	}
	h1 {
		font-size: 4rem;
		font-weight: 700;
		line-height: 1;
		text-align: center;
		margin-bottom: 0.5em;
	}
	.text-gradient {
		background-image: var(--accent-gradient);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-size: 400%;
		background-position: 0%;
	}
	.instructions {
		margin-bottom: 2rem;
		border: 1px solid rgba(var(--accent-light), 25%);
		background: linear-gradient(
			rgba(var(--accent-dark), 66%),
			rgba(var(--accent-dark), 33%)
		);
		padding: 1.5rem;
		border-radius: 8px;
	}
	.instructions code {
		font-size: 0.8em;
		font-weight: bold;
		background: rgba(var(--accent-light), 12%);
		color: rgb(var(--accent-light));
		border-radius: 4px;
		padding: 0.3em 0.4em;
	}
	.instructions strong {
		color: rgb(var(--accent-light));
	}
	.link-card-grid {
		display: grid;
		grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
		gap: 2rem;
		padding: 0;
	}
</style>
